# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  GO_VERSION: stable
  GOLANGCI_LINT_VERSION: v1.60

jobs:

  build:
    name: Build and test
    runs-on: ubuntu-latest
    outputs:
      cover_profile_bz2: ${{ steps.test-coverage.outputs.cover_profile_bz2 }}
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Build
      run: go build -race -v ./...

    - name: Test
      run: go test -race -v -cover -covermode=atomic -coverprofile=coverage.txt ./...

    - name: Output coverage data
      id: test-coverage
      run: |
        {
          echo "cover_profile_bz2<<EndOfCoverProfileData";
          bzip2 -9 -c coverage.txt;
          echo "EndOfCoverProfileData";
        } >> "${GITHUB_OUTPUT}"

  codecov:
    name: Upload test coverage data to codecov.io
    needs: build
    runs-on: ubuntu-latest
    steps:

    - name: Decompress coverage data
      run: |
        cat > coverage.txt.bz2 <<EOF
        ${{ needs.build.outputs.cover_profile_bz2 }}
        EOF
        bunzip2 coverage.txt.bz2
    
    - name: Upload coverage data
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: coverage.txt

  golangci:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: ${{ env.GOLANGCI_LINT_VERSION }}
